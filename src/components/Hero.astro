---
import es from '../i18n/es.json';
import en from '../i18n/en.json';

// Recibe el idioma como prop, por defecto español
const { lang = "es" } = Astro.props;
const t = lang === "en" ? en : es;

const links = [
  {
    href: "/cv.pdf",
    icon: "svg/file.svg",
    alt: t.hero.cv,
    label: t.hero.cv,
  },
  {
    href: "https://github.com/josemmp2005",
    icon: "svg/github.svg",
    alt: t.hero.github,
    label: t.hero.github,
  },
  {
    href: "https://www.linkedin.com/in/josé-maría-mayén-pérez-401435351",
    icon: "svg/linkedin.svg",
    alt: t.hero.linkedin,
    label: t.hero.linkedin,
  },
  {
    href: "mailto:josemayenp@gmail.com",
    icon: "svg/mail.svg",
    alt: t.hero.email,
    label: "josemayenp@gmail.com",
  },
];
---

<section
  class="flex flex-col items-center justify-center text-center p-8 gap-5 text-white py-12 min-h-screen opacity-0 translate-y-8 transition-all duration-700"
  id="hero-anim"
>
  <img
    src="/img/foto-mia.jpg"
    alt="Foto de José María"
    class="w-[50%] md:w-[15rem] h-auto object-cover rounded-full max-w-[300px] mb-4 mt-12"
    loading="lazy"
  />
  <h2 class="text-3xl font-bold text-center mb-12 tracking-wide">
    {t.hero.hello}
  </h2>
  <h3 class="text-2xl font-semibold mb-4 text-blue-300">
    {t.hero.developer}
  </h3>
  <p class="text-lg text-gray-300 max-w-2xl mx-auto mb-8">
    {t.hero.description}
  </p>
  <div class="flex flex-col items-center mt-8 gap-2 w-full max-w-xl mx-auto">
    <div class="flex justify-center gap-4">
      {
        [links[1], links[2]].map((link) => (
          <a
            href={link.href}
            class="flex items-center gap-4 p-4 rounded-xl bg-white/10 hover:bg-white/20 transition shadow-lg backdrop-blur w-40 mx-auto"
            target={link.href.startsWith("http") ? "_blank" : undefined}
            rel={
              link.href.startsWith("http") ? "noopener noreferrer" : undefined
            }
          >
            <img src={link.icon} alt={link.alt} class="w-8 h-8" />
            <span class="font-semibold text-lg break-all">{link.label}</span>
          </a>
        ))
      }
    </div>
    <div>
      <a
        href={links[3].href}
        class="flex items-center gap-4 p-4 rounded-xl bg-white/10 hover:bg-white/20 transition shadow-lg backdrop-blur w-full max-w-xs mx-auto mt-2"
        target={links[3].href.startsWith("http") ? "_blank" : undefined}
        rel={links[3].href.startsWith("http")
          ? "noopener noreferrer"
          : undefined}
      >
        <img src={links[3].icon} alt={links[3].alt} class="w-8 h-8" />
        <span class="font-semibold text-lg truncate">{links[3].label}</span>
      </a>
    </div>
    <div>
      <a
        href={links[0].href}
        class="inline-flex items-center gap-4 p-4 rounded-xl bg-white/10 hover:bg-white/20 transition shadow-lg backdrop-blur mx-auto mt-2"
        target={links[0].href.startsWith("http") ? "_blank" : undefined}
        rel={links[0].href.startsWith("http")
          ? "noopener noreferrer"
          : undefined}
      >
        <img src={links[0].icon} alt={links[0].alt} class="w-8 h-8" />
        <span class="font-semibold text-lg break-all">{links[0].label}</span>
      </a>
    </div>
  </div>
</section>

<script is:inline>
  const heroAnim = document.getElementById("hero-anim");
  function checkHeroAnim() {
    const rect = heroAnim.getBoundingClientRect();
    if (rect.top < window.innerHeight - 100 && rect.bottom > 100) {
      heroAnim.classList.remove("opacity-0", "translate-y-8");
      heroAnim.classList.add("opacity-100", "translate-y-0");
    } else {
      heroAnim.classList.remove("opacity-100", "translate-y-0");
      heroAnim.classList.add("opacity-0", "translate-y-8");
    }
  }
  window.addEventListener("scroll", checkHeroAnim);
  window.addEventListener("resize", checkHeroAnim);
  // Ejecutar tras el primer render para que aparezca si ya está visible
  window.addEventListener("DOMContentLoaded", checkHeroAnim);
</script>
